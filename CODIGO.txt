print

A função print() é uma das funções mais importantes e usadas na linguagem Python. Sua função é, basicamente, exibir mensagens na tela ou enviá-las para outro dispositivo, como imprimir dentro de arquivos de texto.
No Python 3, print() é uma função interna, de modo que não é necessário importar nenhuma biblioteca para poder utilizá-la. Basta chamá-la e passar os argumentos necessários.

No Python 2, print era uma declaração, o que significa que não era possível realizar determinadas ações como atribuir o retorno de sua chamada a uma variável ou outra declaração.
   
ELIF

elif é uma abreviação de “else if”. É usado para verificar múltiplas expressões para verdadeiro e executar um bloco de código assim que uma das condições é verdadeira.

IF

É muito comum na programação, precisarmos que determinado bloco de código seja executado apenas se determinada condição for satisfeita.

Para esses casos, Python disponibiliza formas de se controlar o fluxo de execução de programas: são as chamadas Estruturas Condicionais IF/ELIF/ELSE.

Uma conceito muito importante para se trabalhar com condições em Python é entender o conceito dos Operadores: is, not, %=, ==, in entre outros.

FLOAT

Float é um tipo de dado em Python que representa números decimais. Ele é utilizado quando precisamos lidar com valores que possuem uma parte fracionária. Em Python, podemos utilizar a palavra-chave “float” para criar variáveis do tipo float. Por exemplo: numero = 3.14 Neste exemplo, a variável “numero” é do tipo float e possui o valor 3.14.

INT

O tipo inteiro é um tipo composto por caracteres numéricos (algarismos) inteiros.

É um tipo usado para um número que pode ser escrito sem um componente decimal, podendo ter ou não sinal, isto é: ser positivo ou negativo.

 input


Uma das tarefas mais comuns em um programa ou script é a captura de dados digitados pelos usuários, para que possam ser processados dentro do programa. Em Python, podemos empregar a função input() para realizar essa tarefa corriqueira.


Esta função lê a entrada que o usuário digitou e armazena o valor em uma variável, por exemplo. A entrada é sempre retornada como um tipo string, independente do tipo de dado fornecido. Se a entrada não for avaliada corretamente, pode resultar em erro na execução do programa, por isso é importante realizar conversões de tipo de forma adequada antes de usar os valores capturados.





